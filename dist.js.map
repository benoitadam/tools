{
  "version": 3,
  "sources": ["src/array/compact.ts", "src/array/last.ts", "src/array/moveIndex.ts", "src/array/moveItem.ts", "src/check/isUndefined.ts", "src/array/range.ts", "src/array/removeItem.ts", "src/cast/tryCatch.ts", "src/json/getJson.ts", "src/check/isRecord.ts", "src/check/isArray.ts", "src/check/isFunction.ts", "src/check/isNull.ts", "src/check/isNil.ts", "src/record/valueBy.ts", "src/record/values.ts", "src/array/uniq.ts", "src/cast/toArray.ts", "src/cast/arr.ts", "src/check/isString.ts", "src/cast/toBoolean.ts", "src/cast/bool.ts", "src/cast/toNumber.ts", "src/cast/nbr.ts", "src/check/isDate.ts", "src/record/keys.ts", "src/check/isEmpty.ts", "src/check/isUuid.ts", "src/cast/toRecord.ts", "src/cast/rec.ts", "src/cast/toString.ts", "src/cast/str.ts", "src/check/isNumber.ts", "src/cast/toDate.ts", "src/cast/toError.ts", "src/stored/storage.ts", "src/stored/setStored.ts", "src/clipboard/copy.ts", "src/json/parseJson.ts", "src/stored/getStored.ts", "src/clipboard/paste.ts", "src/json/cloneJson.ts", "src/number/bounds.ts", "src/number/diff.ts", "src/number/rand.ts", "src/number/round.ts", "src/observer/Observer.ts", "src/observer/getObserver.ts", "src/promise/retry.ts", "src/promise/sleep.ts", "src/promise/TimeoutError.ts", "src/promise/withTimeout.ts", "src/record/cloneRecord.ts", "src/record/deleteKey.ts", "src/record/entries.ts", "src/record/groupBy.ts", "src/rest/RestError.ts", "src/rest/xhrRest.ts", "src/rest/Rest.ts", "src/rest/index.ts", "src/string/firstLower.ts", "src/string/firstUpper.ts", "src/string/clean.ts", "src/string/words.ts", "src/string/pascal.ts", "src/string/camel.ts", "src/string/uuid.ts"],
  "sourcesContent": ["import toArray from \"../cast/toArray\";\r\n\r\n/**\r\n * Creates an array with all falsy values removed.\r\n * @param items\r\n * @returns\r\n */\r\nexport default (value: any) => value.filter(Boolean) as (String|Number|Object|Date)[];", "/**\n * Returns the last item in the array.\n * @example last([3, 4, 5]) === 5\n * @param items\n * @returns\n */\nexport default <T>(items: T[]) => items[items.length - 1];", "/**\n * Move an item in an array from an index to a new index.\n * @template T\n * @param {T[]} items - The array to move the item in.\n * @param {T} item - The item to move.\n * @param {number} addIndex - The index to move the item to.\n * @returns {T[]} A new array with the item moved.\n */\nexport default <T>(items: T[], from: number, to: number) => {\n  if (from === to) return items;\n  const removes = items.splice(from, 1);\n  items.splice(to, 0, removes[0]);\n  return items;\n}\n", "import moveIndex from './moveIndex';\n\n/**\n * Moves an item in an array to a new index.\n * @template T\n * @param {T[]} items - The array to move the item in.\n * @param {T} item - The item to move.\n * @param {number} addIndex - The index to move the item to.\n * @returns {T[]} A new array with the item moved.\n */\nexport default <T>(items: T[], item: T, addIndex: number) => {\n  const from = items.indexOf(item);\n  if (from === -1) return items;\n  let to = (from + addIndex) % 5;\n  if (to < 0) to += items.length;\n  return moveIndex(items, from, to);\n}\n", "export default (value: any): value is undefined => value === undefined;", "import isUndefined from \"../check/isUndefined\";\n\ninterface Range {\n  /**\n   * Returns an array of min to max item\n   * @example range(3, 5) => [3, 4, 5]\n   * @param min\n   * @param max\n   */\n  (min: number, max: number): number[];\n\n  /**\n   * Returns an array of length item\n   * @example range(3) => [0, 1, 2]\n   * @param length\n   */\n  (length: number): number[];\n}\n\nconst range = ((min: number, max?: number) => {\n  if (!isUndefined(max)) return range(max - min + 1).map((i) => i + min);\n  return Array.from(Array(min).keys());\n}) as Range\n\nexport default range;", "/**\n * Removes an item from an array.\n * @template T\n * @param {T[]} items - The array to remove the item from.\n * @param {T} item - The item to remove.\n * @returns {T[]} A new array with the item removed.\n */\nexport default <T>(items: T[], item: T) => {\n  const i = items.indexOf(item);\n  if (i === -1) return items;\n  items.splice(i, 1);\n  return items;\n}\n", "interface TryCatch {\r\n    <T = any>(v: () => any): T | undefined;\r\n    <T = any, U = any>(v: () => any, def: U): T | U;\r\n}\r\n\r\nexport default ((fun: () => any, def: any): any => {\r\n    try {\r\n        return fun();\r\n    } catch (error) {\r\n        return def;\r\n    }\r\n}) as TryCatch;", "import tryCatch from \"../cast/tryCatch\";\n\ninterface GetJson {\n  (v: any): string | undefined;\n  <T = any>(v: any, defVal: T, indented?: boolean): string | T;\n}\n\nexport default (<T>(v: any, def?: T, indented?: boolean): string | T | undefined =>\n  tryCatch(() => JSON.stringify(v, null, indented ? 2 : 0), def)\n) as GetJson\n", "export default (value: any): value is Record<any, any> => value instanceof Object && !Array.isArray(value);", "export default Array.isArray", "export default (value: any): value is Function => value instanceof Function;", "export default (value: any): value is undefined => value === null;", "import isNull from \"./isNull\";\nimport isUndefined from \"./isUndefined\";\n\nexport default (value: any): boolean => isNull(value) || isUndefined(value);", "import isRecord from '../check/isRecord';\nimport isArray from '../check/isArray';\nimport isFunction from '../check/isFunction';\nimport isNil from '../check/isNil';\n\ntype IKey<T> = undefined | null | keyof T | ((item: T, index: number) => any);\ntype IVal<T, U> = undefined | null | keyof T | ((item: T, index: number) => U);\n\ntype RKey<T> = undefined | null | keyof T | ((item: T, key: string) => any);\ntype RVal<T, U> = undefined | null | keyof T | ((item: T, key: string) => U);\n\ninterface ValueBy {\n  <T>(items: T[], key: IKey<T>): Record<string, T>;\n  <T, U>(items: T[], key: IKey<T>, val: IVal<T, U>): Record<string, U>;\n  <T>(record: Record<string, T>, key: RKey<T>): Record<string, T>;\n  <T, U>(record: Record<string, T>, key: RKey<T>, val: RVal<T, U>): Record<string, U>;\n}\n\nexport default ((items: any, key: any, val?: any): Record<string, any> => {\n  const r: Record<string, any[]> = {};\n  const getK = isFunction(key) ? key : isNil(key) ? (_: any, k: any) => k : (i: any) => i[key];\n  const getV = isFunction(val) ? val : isNil(val) ? (i: any) => i : (i: any) => i[val];\n  if (isArray(items)) {\n    items.forEach((item, index) => {\n      r[getK(item, index)] = getV(item, index);\n    });\n  }\n  if (isRecord(items)) {\n    Object.entries(items).forEach(kv => {\n      const key = kv[0], val = kv[1];\n      r[getK(val, key)] = getV(val, key);\n    });\n  }\n  return r;\n}) as ValueBy;\n", "export default Object.values;", "import getJson from '../json/getJson';\nimport valueBy from '../record/valueBy';\nimport values from '../record/values';\n\nexport default <T>(arr: T[]): T[] => values(valueBy(arr, (v) => getJson(v)));", "import isArray from '../check/isArray';\nimport isNil from '../check/isNil';\n\ninterface ToArray {\n  <T = any>(v: T[] | T | null | undefined): T[];\n  <T = any>(v: any, def: T[]): T[];\n}\n\nexport default (<T = any>(v: any, def: T[] = []): T[] => isNil(v) ? def : isArray(v) ? v : [v]) as ToArray\n", "import toArray from \"./toArray\";\r\n\r\nexport default <T = any>(v: T[] | T | null | undefined) => toArray(v);", "export default (value: any): value is string => typeof value === 'string';", "import isNil from '../check/isNil';\nimport isString from '../check/isString';\n\ninterface ToBoolean {\n  (v: any): boolean | undefined;\n  <T>(v: any, defVal: T): boolean | T;\n}\n\nexport default (<T = boolean>(v: any, defVal?: T | boolean): boolean | T | undefined => (\n  isString(v) ? ['true', 'ok', 'on', '1'].indexOf(String(v).toLowerCase()) !== -1 : isNil(v) ? defVal : !!v\n)) as ToBoolean\n", "import toBoolean from \"./toBoolean\";\r\n\r\nexport default (v: any) => toBoolean(v);", "import isString from \"../check/isString\";\n\ninterface ToNumber {\n  (v: any): number | undefined;\n  <D>(v: any, nanVal: D): number | D;\n}\n\nexport default (<D>(v: any, nanVal?: D): number | D | undefined => {\n  const clean = isString(v) ? v.replace(/,/g, '.').replace(/[^0-9\\-\\.]/g, '') : String(v);\n  const nbr = clean !== '' ? Number(clean) : Number.NaN;\n  return Number.isNaN(nbr) ? nanVal : nbr;\n}) as ToNumber;", "import toNumber from \"./toNumber\";\r\n\r\nexport default (v: any) => toNumber(v, 0);", "export default (value: any): value is Date => value instanceof Date;", "export default Object.keys;", "import keys from '../record/keys';\nimport isArray from './isArray';\n\nexport default (value: any): boolean => !value || (isArray(value) ? value : keys(value)).length === 0;", "export default (value: any): value is string => {\n  const code = String(value).replace(/[a-zA-Z0-9]+/g, (a) => '' + a.length);\n  return code === '8-4-4-4-12' || code === '32';\n}", "import { isRecord } from \"../check\";\n\ninterface ToRecord {\n  <T = any>(v: T | null | undefined): T | Partial<T>;\n  <T = any, U = any>(v: T | null | undefined, def: U): T | U;\n}\n\nexport default (<T = any>(v: any, def: T = {} as any): T => isRecord(v) ? v : def) as ToRecord;", "import toRecord from \"./toRecord\";\r\n\r\nexport default <T = any>(v: T | null | undefined) => toRecord<T>(v);", "import isNil from '../check/isNil';\n\nexport default (v: any, def: string = ''): string => isNil(v) ? def : String(v);", "import toString from './toString';\r\n\r\nexport default (v: any) => toString(v);", "export default (value: any): value is number => typeof value === 'number';", "import isDate from \"../check/isDate\";\nimport isString from \"../check/isString\";\nimport isNumber from \"../check/isNumber\";\nimport isUndefined from \"../check/isUndefined\";\n\ninterface ToDate {\n  (v: any): Date;\n  <TDef>(v: any, defVal: TDef): Date | TDef;\n  <TDef>(v: any, defVal?: TDef): Date | TDef | undefined;\n}\n\nexport default (\n  <TDef>(v: any, defVal?: TDef): Date | TDef | undefined =>\n    isDate(v) ? v :\n    isString(v) || isNumber(v) ? new Date(v) :\n    isUndefined(v) ? new Date() : defVal\n) as ToDate;\n", "export default (error: any): Error => error instanceof Error ? error : new Error(String(error));", "export interface IStorage {\n  getItem(key: string): string | null;\n  removeItem(key: string): void;\n  setItem(key: string, value: string): void;\n}\n\nconst values: any = {};\nlet _storage: IStorage = globalThis.localStorage || {\n  getItem: (key: string) => values[key] || null,\n  removeItem: (key: string) => {\n    delete values[key];\n  },\n  setItem: (key: string, value: string) => (values[key] = value),\n};\n\nexport default (storage?: IStorage) => {\n  if (storage) _storage = storage;\n  return _storage;\n}\n", "import isUndefined from '../check/isUndefined';\nimport getJson from '../json/getJson';\nimport storage from './storage';\n\nexport default <T = any>(key: string, value: T) => {\n  const json = isUndefined(value) ? undefined : getJson(value);\n  if (isUndefined(json)) storage().removeItem(key);\n  else storage().setItem(key, json);\n}\n", "import getJson from '../json/getJson';\nimport setStored from '../stored/setStored';\n\nexport default (value: any): Promise<void> => {\n  setStored('__clipboard', value);\n  if (navigator && navigator.clipboard) {\n    return navigator.clipboard.writeText(getJson(value, ''));\n  }\n  return Promise.resolve();\n}\n", "import tryCatch from \"../cast/tryCatch\";\n\ninterface ParseJson {\n  <T = any>(v: any): T | undefined;\n  <T = any, U = any>(v: any, def: U): T | U;\n}\n\nexport default (<T, U>(v: any, def?: U): T | U | undefined => (\n  tryCatch(() => JSON.parse(v) as T, def)\n)) as ParseJson;", "import parseJson from '../json/parseJson';\nimport storage from './storage';\n\ninterface GetStored {\n  <T = any>(key: string): T | undefined;\n  <T = any>(key: string, defVal?: T): T;\n}\n\nexport default (<T = any>(key: string, defVal?: T): T | undefined => parseJson(storage().getItem(key), defVal)) as GetStored\n", "import parseJson from '../json/parseJson';\nimport getStored from '../stored/getStored';\n\nexport default () => {\n  if (navigator && navigator.clipboard) {\n    return navigator.clipboard\n      .readText()\n      .then((v) => parseJson(v, v))\n      .catch(() => getStored('__clipboard'));\n  }\n  return Promise.resolve(getStored('__clipboard'));\n}\n", "import parseJson from './parseJson';\nimport getJson from './getJson';\n\ninterface CloneJson {\n  <T = any>(v: T): T;\n  <T = any>(v: T, defVal: T): T;\n}\n\nexport default (<T>(v: T, defVal?: T): T | undefined => parseJson(getJson(v), defVal)) as CloneJson;", "import isNumber from \"../check/isNumber\";\n\nexport default (val: number, min?: number, max?: number): number => (\n  (isNumber(min) && val < min) ? min :\n  (isNumber(max) && val > max) ? max :\n  val\n)", "export default (arg1: number, arg2: number): number => Math.abs(arg1 - arg2);", "export default (min: number, max: number) => Math.random() * (max - min) + min;", "export default (value: number, decimal?: number) => {\n  const x = Math.pow(10, decimal || 0);\n  return Math.round(value * x) / x;\n}", "import getStored from '../stored/getStored';\nimport setStored from '../stored/setStored';\n\nexport type ObserverHandler<T> = (value: T, oldValue: T) => void;\n\nexport type ObserverFilter<T> = (value: T) => boolean;\nconst nullObserverFilter: ObserverFilter<any> = (v: any) => v !== null && v !== undefined;\n\nexport default class Observer<T = any> {\n  /** Value */\n  val: T;\n  key?: string;\n  name?: string;\n\n  /** Handlers */\n  private hs: ObserverHandler<T>[] = [];\n\n  /** map and debounce */\n  private src?: Observer;\n  private srcOff?: () => void;\n  private srcH?: ObserverHandler<any>;\n\n  private sKey?: string;\n\n  constructor(init: T, key?: string) {\n    this.val = init;\n    if (key) this.key = key;\n  }\n\n  get() {\n    return this.val;\n  }\n\n  set(value: T | ((value: T) => T)) {\n    const old = this.val;\n    this.val = typeof value === 'function' ? (value as (value: T) => T)(this.val) : (value as T);\n    if (old !== this.val) {\n      this.hs.forEach((h) => h(this.val, old));\n    }\n    return this;\n  }\n\n  on(h: ObserverHandler<T>) {\n    this.hs.push(h);\n    if (!this.srcOff && this.src && this.srcH) {\n      this.srcOff = this.src.on(this.srcH);\n    }\n    return () => this.off(h);\n  }\n\n  off(h: ObserverHandler<T>) {\n    this.hs.splice(this.hs.indexOf(h), 1);\n    if (this.srcOff && this.hs.length === 0) {\n      this.srcOff();\n      delete this.srcOff;\n    }\n  }\n\n  store(key: string) {\n    if (this.sKey === key) return this;\n    this.sKey = key;\n    this.on((val) => setStored(key, val));\n    const val = getStored(key);\n    if (val !== undefined) this.set(val);\n    return this;\n  }\n\n  map<U>(cb: (val: T) => U) {\n    const r = new Observer<U>(cb(this.val));\n    r.src = this;\n    r.srcH = () => r.set(cb(this.val));\n    return r;\n  }\n\n  /**\n   * @example\n   * a b c - - - d - - e - -\n   * - - - - c - - - d - - e\n   */\n  debounce(ms: number) {\n    let timer: any;\n    const r = new Observer<T>(this.val);\n    r.src = this;\n    r.srcH = () => {\n      clearTimeout(timer);\n      timer = setTimeout(() => r.set(this.val), ms);\n    };\n    return r;\n  }\n\n  /**\n   * @example\n   * a b c d - - - - e - f g - -\n   * a - c - d - - - e - f - g - (2s)\n   * a - - d - - - - e - - g - - (3s)\n   * a - - - d - - - e - - - g - (4s)\n   */\n  throttle(ms: number) {\n    let timer: any = null;\n    let last = 0;\n    const r = new Observer<T>(this.val);\n    r.src = this;\n    const update = () => {\n      timer = null;\n      last = Date.now();\n      r.set(this.val);\n    };\n    r.srcH = () => {\n      if (timer !== null) return;\n      const nextMs = ms - (Date.now() - last);\n      if (nextMs < 0) return update();\n      timer = setTimeout(update, nextMs);\n    };\n    return r;\n  }\n\n  toPromise(filter: ObserverFilter<T> = nullObserverFilter) {\n    return new Promise<T>((resolve) => {\n      if (filter(this.val)) return resolve(this.val);\n      const off = this.on((val) => {\n        if (!filter(val)) return;\n        off();\n        resolve(val);\n      });\n    });\n  }\n}\n", "import Observer from './Observer';\n\nconst byKey: Record<string, Observer> = {};\n\nexport default <T = any>(key: string | null, init?: T, isStored?: boolean): Observer<T> => {\n  if (key === null) return new Observer<T>(init!);\n  return byKey[key] || (byKey[key] = isStored ? new Observer<T>(init!, key) : new Observer<T>(init!, key).store(key));\n}\n", "export default async <T>(createPromise: () => Promise<T>, retry = 2): Promise<T> => {\n  let error: any;\n  for (let i = 0; i < retry; i++) {\n    try {\n      return await createPromise();\n    } catch (e) {\n      error = e;\n    }\n  }\n  throw error;\n}\n", "export default (ms: number) => new Promise((r) => setTimeout(r, ms));", "export default class TimeoutError extends Error {\r\n    constructor(message?: string) {\r\n      super(message);\r\n      this.name = 'TimeoutError';\r\n    }\r\n  }", "import TimeoutError from \"./TimeoutError\";\n\nexport default <T>(promise: Promise<T>, timeoutMs = 5000): Promise<T> => {\n  return new Promise((resolve, reject) => {\n    const t = setTimeout(() => reject(new TimeoutError()), timeoutMs);\n    promise\n      .then(resolve, reject)\n      .finally(() => clearTimeout(t));\n  });\n}", "import { RecordWritable } from \"./RecordWritable\";\n\nexport default <T extends {}>(value: T | null | undefined): RecordWritable<T> => Object.assign({}, value);\n", "export default <T>(record: Record<string, T>, key: string): Record<string, T> => {\n  delete record[key];\n  return record;\n}", "export default Object.entries;", "import isRecord from '../check/isRecord';\nimport isArray from '../check/isArray';\nimport isFunction from '../check/isFunction';\nimport isNil from '../check/isNil';\n\ntype IKey<T> = undefined | null | keyof T | ((item: T, index: number) => any);\ntype IVal<T, U> = undefined | null | keyof T | ((item: T, index: number) => U);\n\ntype RKey<T> = undefined | null | keyof T | ((item: T, key: string) => any);\ntype RVal<T, U> = undefined | null | keyof T | ((item: T, key: string) => U);\n\ninterface GroupBy {\n  <T>(items: T[], key: IKey<T>): Record<string, T[]>;\n  <T, U>(items: T[], key: IKey<T>, val: IVal<T, U>): Record<string, U[]>;\n  <T>(record: Record<string, T>, key: RKey<T>): Record<string, T[]>;\n  <T, U>(record: Record<string, T>, key: RKey<T>, val: RVal<T, U>): Record<string, U[]>\n}\n\nexport default ((items: any, key: any, val?: any): Record<string, any[]> => {\n  const r: Record<string, any[]> = {};\n  const getK = isFunction(key) ? key : isNil(key) ? (_: any, k: any) => k : (i: any) => i[key];\n  const getV = isFunction(val) ? val : isNil(val) ? (i: any) => i : (i: any) => i[val];\n  if (isArray(items)) {\n    items.forEach((item, index) => {\n      const k = getK(item, index);\n      (r[k] || (r[k] = [])).push(getV(item, index));\n    });\n  }\n  if (isRecord(items)) {\n    Object.entries(items).forEach(kv => {\n      const key = kv[0], val = kv[1];\n      const k = getK(val, key);\n      (r[k] || (r[k] = [])).push(getV(val, key));\n    });\n  }\n  return r;\n}) as GroupBy;", "const getMsg = (r: any) => String((r && r.message) || r);\nconst getCode = (r: any) => String(r && r.code);\n\nexport default class RestError extends Error {\n  code: string;\n  constructor(public xhr: XMLHttpRequest) {\n    super(getMsg(xhr.response) || xhr.statusText);\n    this.code = getCode(xhr.response) || String(xhr.status);\n  }\n}\n", "import RestError from './RestError';\nimport { RestOptions, RestResponseType, RestURL } from './types';\n\nconst acceptJson = 'application/json; charset=utf-8';\nconst acceptMap: Partial<Record<RestResponseType, string>> = {\n  json: acceptJson,\n  text: 'text/*; charset=utf-8',\n  blob: '*/*',\n  document: 'text/html, application/xhtml+xml, application/xml; q=0.9; charset=utf-8',\n  arraybuffer: '*/*',\n};\n\nexport default async <T = any>(xhr: XMLHttpRequest, url: RestURL, options: RestOptions<T> = {}): Promise<T> => {\n  try {\n    if (options.onInit) options.onInit(xhr);\n\n    xhr.timeout = options.timeout || 20000;\n    xhr.responseType = options.responseType || 'json';\n\n    if (options.params || options.baseUrl) {\n      const urlObj = new URL(url, options.baseUrl);\n      if (options.params) {\n        Object.entries(options.params).forEach(kv => {\n          const key = kv[0], val = kv[1];\n          if (Array.isArray(val)) {\n            urlObj.searchParams.delete(key);\n            Object.values(val).forEach((p) => urlObj.searchParams.append(key, String(p)));\n            return;\n          }\n          if (typeof val === 'object') {\n            urlObj.searchParams.set(key, JSON.stringify(val));\n            return;\n          }\n          urlObj.searchParams.set(key, String(val));\n        });\n      }\n      url = urlObj;\n    }\n\n    xhr.open((options.method || 'POST').toUpperCase(), url);\n\n    if (options.data) xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n    xhr.setRequestHeader('Accept', acceptMap[xhr.responseType] || acceptJson);\n    if (options.headers) {\n      const headers = typeof options.headers === 'function' ? options.headers() : options.headers;\n      Object.entries(headers).forEach(kv => xhr.setRequestHeader(kv[0], kv[1]));\n    }\n\n    if (options.onProgress) {\n      const onProgress = options.onProgress;\n      xhr.addEventListener('progress', (e) => onProgress(e, e.loaded / e.total));\n    }\n\n    const body = options.data ? JSON.stringify(options.data) : options.formData;\n\n    const waitResponse = new Promise((resolve, reject) => {\n      xhr.onload = resolve;\n      xhr.onerror = reject;\n    });\n\n    if (options.send) options.send(xhr, body);\n    else xhr.send(body);\n\n    await waitResponse;\n\n    if (xhr.status >= 400) throw xhr.status;\n\n    if (options.onSuccess) options.onSuccess(xhr.response as T, xhr);\n\n    // console.debug('Rest success', url, options, xhr.response);\n    return xhr.response as T;\n  } catch (err) {\n    // console.debug('Rest error', url, options, err);\n    const error = new RestError(xhr);\n    if (options.onError) options.onError(error, xhr);\n    throw error;\n  }\n}\n", "import xhrRest from './xhrRest';\nimport { RestData, RestOptions, RestURL } from './types';\n\nexport default class Rest {\n  constructor(public options?: RestOptions) {}\n\n  new(options?: RestOptions) {\n    return new Rest(options);\n  }\n\n  newXhr() {\n    return new XMLHttpRequest();\n  }\n\n  send<T = any>(url: RestURL, options: RestOptions<T> = {}) {\n    const xhr = this.newXhr();\n    return xhrRest<T>(xhr, url, this.options ? { ...this.options, ...options } : options);\n  }\n\n  get<T = any>(url: RestURL, options: RestOptions<T> = {}) {\n    return this.send<T>(url, { method: 'GET', ...options });\n  }\n\n  delete<T = any>(url: RestURL, options: RestOptions<T> = {}) {\n    return this.send<T>(url, { method: 'DELETE', ...options });\n  }\n\n  post<T = any>(url: RestURL, data?: RestData, options: RestOptions<T> = {}) {\n    return this.send<T>(url, { method: 'POST', data, ...options });\n  }\n\n  patch<T = any>(url: RestURL, data?: RestData, options: RestOptions<T> = {}) {\n    return this.send<T>(url, { method: 'PATCH', data, ...options });\n  }\n\n  put<T = any>(url: RestURL, data?: RestData, options: RestOptions<T> = {}) {\n    return this.send<T>(url, { method: 'PUT', data, ...options });\n  }\n\n  upload<T = any>(url: RestURL, name: string, file: File, fileName?: string, options: RestOptions<T> = {}) {\n    const formData = new FormData();\n    formData.append(name, file, fileName || file.name);\n    return this.send<T>(url, { method: 'POST', formData, ...options });\n  }\n}\n", "import Rest from './Rest';\n\nexport * from './types';\n\nexport { default as Rest } from './Rest';\nexport { default as RestError } from './RestError';\nexport { default as xhrRest } from './xhrRest';\n\nexport const rest = new Rest();\n", "export default (arg: string): string => arg ? arg[0].toLowerCase() + arg.substring(1) : arg;", "export default (arg: string): string => arg ? arg[0].toUpperCase() + arg.substring(1) : arg;", "export default (arg: string): string => arg\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/[^\\w]/g, ' ')\n    .trim();", "import clean from './clean';\n\nexport default (arg: string): string[] => clean(arg)\n    .replace(/[a-z0-9][A-Z]/g, (s) => s[0] + ' ' + s[1].toLowerCase())\n    .toLowerCase()\n    .trim()\n    .split(' ')\n    .filter((s) => s);", "import firstUpper from './firstUpper';\nimport words from './words';\n\nexport default (arg: any): string => words(arg).map(firstUpper).join('');", "import firstLower from './firstLower';\nimport pascal from './pascal';\n\nexport default (arg: string): string => firstLower(pascal(arg));\n", "export const _uuid = (crypto: any) => {\n  if (crypto.randomUUID) {\n    return crypto.randomUUID.bind(crypto);\n  }\n  if (crypto.getRandomValues) {\n    return () => {\n      var buff = new Uint16Array(8);\n      crypto.getRandomValues(buff);\n      const S = (i: number) => buff[i].toString(16).padStart(4, '0');\n      return S(0) + S(1) + '-' + S(2) + '-' + S(3) + '-' + S(4) + '-' + S(5) + S(6) + S(7);\n    };\n  }\n  return () => {\n    let h = '0123456789abcdef';\n    let k = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n    let u = '',\n      i = 0,\n      rb = (Math.random() * 0xffffffff) | 0;\n    while (i++ < 36) {\n      var c = k[i - 1],\n        r = rb & 0xf,\n        v = c == 'x' ? r : (r & 0x3) | 0x8;\n      u += c == '-' || c == '4' ? c : h[v];\n      rb = i % 8 == 0 ? (Math.random() * 0xffffffff) | 0 : rb >> 4;\n    }\n    return u;\n  };\n};\n\nexport default _uuid(global.crypto || {});\n"],
  "mappings": "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",
  "names": ["compact_default", "value", "last_default", "items", "moveIndex_default", "items", "from", "to", "removes", "moveItem_default", "items", "item", "addIndex", "from", "to", "moveIndex_default", "isUndefined_default", "value", "range", "min", "max", "isUndefined_default", "i", "range_default", "removeItem_default", "items", "item", "i", "tryCatch_default", "fun", "def", "error", "getJson_default", "v", "def", "indented", "tryCatch_default", "isRecord_default", "value", "isArray_default", "isFunction_default", "value", "isNull_default", "value", "isNil_default", "value", "isNull_default", "isUndefined_default", "valueBy_default", "items", "key", "val", "r", "getK", "isFunction_default", "isNil_default", "_", "k", "i", "getV", "isArray_default", "item", "index", "isRecord_default", "kv", "values_default", "uniq_default", "arr", "values_default", "valueBy_default", "v", "getJson_default", "toArray_default", "v", "def", "isNil_default", "isArray_default", "arr_default", "v", "toArray_default", "isString_default", "value", "toBoolean_default", "v", "defVal", "isString_default", "isNil_default", "bool_default", "v", "toBoolean_default", "toNumber_default", "v", "nanVal", "clean", "isString_default", "nbr", "nbr_default", "v", "toNumber_default", "isDate_default", "value", "keys_default", "isEmpty_default", "value", "isArray_default", "keys_default", "isUuid_default", "value", "code", "a", "toRecord_default", "v", "def", "isRecord_default", "rec_default", "v", "toRecord_default", "toString_default", "v", "def", "isNil_default", "str_default", "v", "toString_default", "isNumber_default", "value", "toDate_default", "v", "defVal", "isDate_default", "isString_default", "isNumber_default", "isUndefined_default", "toError_default", "error", "values", "_storage", "key", "value", "storage_default", "storage", "setStored_default", "key", "value", "json", "isUndefined_default", "getJson_default", "storage_default", "copy_default", "value", "setStored_default", "getJson_default", "parseJson_default", "v", "def", "tryCatch_default", "getStored_default", "key", "defVal", "parseJson_default", "storage_default", "paste_default", "v", "parseJson_default", "getStored_default", "cloneJson_default", "v", "defVal", "parseJson_default", "getJson_default", "bounds_default", "val", "min", "max", "isNumber_default", "diff_default", "arg1", "arg2", "rand_default", "min", "max", "round_default", "value", "decimal", "x", "nullObserverFilter", "v", "Observer", "_Observer", "init", "key", "value", "old", "h", "val", "setStored_default", "getStored_default", "cb", "r", "ms", "timer", "last", "update", "nextMs", "filter", "resolve", "off", "byKey", "getObserver_default", "key", "init", "isStored", "Observer", "retry_default", "createPromise", "retry", "error", "i", "e", "sleep_default", "ms", "TimeoutError", "message", "withTimeout_default", "promise", "timeoutMs", "resolve", "reject", "t", "TimeoutError", "cloneRecord_default", "value", "deleteKey_default", "record", "key", "entries_default", "groupBy_default", "items", "key", "val", "r", "getK", "isFunction_default", "isNil_default", "_", "k", "i", "getV", "isArray_default", "item", "index", "isRecord_default", "kv", "getMsg", "r", "getCode", "RestError", "xhr", "acceptJson", "acceptMap", "xhrRest_default", "xhr", "url", "options", "urlObj", "kv", "key", "val", "p", "headers", "onProgress", "e", "body", "waitResponse", "resolve", "reject", "err", "error", "RestError", "Rest", "_Rest", "options", "url", "xhr", "xhrRest_default", "__spreadValues", "data", "name", "file", "fileName", "formData", "rest", "Rest", "firstLower_default", "arg", "firstUpper_default", "arg", "clean_default", "arg", "words_default", "arg", "clean_default", "s", "pascal_default", "arg", "words_default", "firstUpper_default", "camel_default", "arg", "firstLower_default", "pascal_default", "_uuid", "crypto", "buff", "S", "i", "h", "k", "u", "rb", "c", "r", "v", "uuid_default"]
}
