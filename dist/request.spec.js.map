{"mappings":"ACGA,SAAS,UAAW,KAChB,KAAK,UAAW,KACZ,OAAO,CAAA,GAAM,OAAA,CAAQ,CAAA,EACzB,EAwCJ","sources":["<anon>","src/request.spec.ts"],"sourcesContent":["// import request from './request';\n// import http from 'http';\ndescribe(\"request\", ()=>{\n    test(\"no-test\", ()=>{\n        expect(true).toEqual(true);\n    });\n// const port = Math.round(Math.random()*10000+10000);\n// const server = http.createServer((req, res) => {\n//     res.writeHead(200, { 'Content-Type': 'application/json' });\n//     res.end('{\"abc\":123}');\n// }).listen(port);\n// const url = `http://0.0.0.0:${port}`;\n// newXhr\n// test('get', async () => {\n//     const result = await request.get(`https://example.com/`);\n//     expect(result).toContain('Example Domain');\n// });\n// test('delete', async () => {\n//     const result = await request.delete(url);\n//     expect(result).toEqual({\"abc\":123});\n// });\n// test('post', async () => {\n//     const result = await request.post(url);\n//     expect(result).toEqual({\"abc\":123});\n// });\n// test('patch', async () => {\n//     const result = await request.patch(url);\n//     expect(result).toEqual({\"abc\":123});\n// });\n// test('put', async () => {\n//     const result = await request.put(url);\n//     expect(result).toEqual({\"abc\":123});\n// });\n// test('upload', async () => {\n//     const result = await request.upload<string>(url);\n//     expect(result).toEqual({\"abc\":123});\n// });\n});\n\n\n//# sourceMappingURL=request.spec.js.map\n","// import request from './request';\n// import http from 'http';\n\ndescribe('request', () => {\n    test('no-test', () => {\n        expect(true).toEqual(true);\n    });\n\n    // const port = Math.round(Math.random()*10000+10000);\n    // const server = http.createServer((req, res) => {\n    //     res.writeHead(200, { 'Content-Type': 'application/json' });\n    //     res.end('{\"abc\":123}');\n    // }).listen(port);\n\n    // const url = `http://0.0.0.0:${port}`;\n\n    // newXhr\n    // test('get', async () => {\n    //     const result = await request.get(`https://example.com/`);\n    //     expect(result).toContain('Example Domain');\n    // });\n\n    // test('delete', async () => {\n    //     const result = await request.delete(url);\n    //     expect(result).toEqual({\"abc\":123});\n    // });\n\n    // test('post', async () => {\n    //     const result = await request.post(url);\n    //     expect(result).toEqual({\"abc\":123});\n    // });\n\n    // test('patch', async () => {\n    //     const result = await request.patch(url);\n    //     expect(result).toEqual({\"abc\":123});\n    // });\n\n    // test('put', async () => {\n    //     const result = await request.put(url);\n    //     expect(result).toEqual({\"abc\":123});\n    // });\n\n    // test('upload', async () => {\n    //     const result = await request.upload<string>(url);\n    //     expect(result).toEqual({\"abc\":123});\n    // });\n});"],"names":["describe","test","expect","toEqual"],"version":3,"file":"request.spec.js.map","sourceRoot":"../"}