{"mappings":"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","sources":["<anon>","src/cast.spec.ts","src/cast.ts"],"sourcesContent":["function $28124995b582090f$export$42d51816ce590c93(v, def = \"\") {\n    return v === null || v === undefined ? def : String(v);\n}\nfunction $28124995b582090f$export$29d5d0b2414dfc5c(v, def = []) {\n    return v === null || v === undefined ? def : Array.isArray(v) ? v : [\n        v\n    ];\n}\nfunction $28124995b582090f$export$d29f2533ab4f8bcf(v, def = {}) {\n    return v === null || typeof v !== \"object\" || Array.isArray(v) ? def : v;\n}\nfunction $28124995b582090f$export$3bfd68ece41435eb(v, nanVal) {\n    const clean = typeof v === \"string\" ? v.replace(/,/g, \".\").replace(/[^0-9\\-\\.]/g, \"\") : String(v);\n    const nbr = clean !== \"\" ? Number(clean) : Number.NaN;\n    return Number.isNaN(nbr) ? nanVal : nbr;\n}\nfunction $28124995b582090f$export$87b259aa03e3d267(v, defVal) {\n    if (typeof v === \"string\") return v === \"true\" || v === \"ok\" || v === \"on\";\n    return v === undefined || v === null ? defVal : !!v;\n}\nfunction $28124995b582090f$export$8048b892d651b310(error) {\n    return error instanceof Error ? error : new Error(String(error));\n}\nfunction $28124995b582090f$export$324d90190a8b822a(v, defVal) {\n    return v instanceof Date ? v : typeof v === \"string\" ? new Date(v) : typeof v === \"number\" ? new Date(v) : defVal === undefined ? new Date() : defVal;\n}\nconst $28124995b582090f$export$f84e8e69fd4488a5 = $28124995b582090f$export$42d51816ce590c93;\nconst $28124995b582090f$export$45b10814cc054894 = $28124995b582090f$export$29d5d0b2414dfc5c;\nconst $28124995b582090f$export$697e4a1b90752ce2 = $28124995b582090f$export$d29f2533ab4f8bcf;\nconst $28124995b582090f$export$a0a81dc3380ce7d3 = $28124995b582090f$export$3bfd68ece41435eb;\nconst $28124995b582090f$export$3c2e6d1b7583eee6 = $28124995b582090f$export$87b259aa03e3d267;\nconst $28124995b582090f$export$cc3b967c039ed3e7 = $28124995b582090f$export$8048b892d651b310;\nconst $28124995b582090f$export$e67a095c620b86fe = $28124995b582090f$export$324d90190a8b822a;\n\n\ndescribe(\"cast\", ()=>{\n    test(`str`, ()=>{\n        expect((0, $28124995b582090f$export$42d51816ce590c93)(0)).toEqual(\"0\");\n        expect((0, $28124995b582090f$export$42d51816ce590c93)(5)).toEqual(\"5\");\n        expect((0, $28124995b582090f$export$42d51816ce590c93)(undefined, \"a\")).toBe(\"a\");\n    });\n    test(`arr`, ()=>{\n        expect((0, $28124995b582090f$export$29d5d0b2414dfc5c)(0)).toEqual([\n            0\n        ]);\n        expect((0, $28124995b582090f$export$29d5d0b2414dfc5c)([\n            5\n        ])).toEqual([\n            5\n        ]);\n        expect((0, $28124995b582090f$export$29d5d0b2414dfc5c)({\n            a: 1\n        })).toEqual([\n            {\n                a: 1\n            }\n        ]);\n    });\n    test(`obj`, ()=>{\n        expect((0, $28124995b582090f$export$d29f2533ab4f8bcf)(0)).toEqual({});\n        expect((0, $28124995b582090f$export$d29f2533ab4f8bcf)([\n            5\n        ], \"b\")).toEqual(\"b\");\n        expect((0, $28124995b582090f$export$d29f2533ab4f8bcf)({\n            a: 1\n        })).toEqual({\n            a: 1\n        });\n    });\n    test(`nbr`, ()=>{\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(0, \"a\")).toEqual(0);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\"\", \"b\")).toEqual(\"b\");\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(undefined, \"c\")).toEqual(\"c\");\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\"\")).toEqual(undefined);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\" \")).toEqual(undefined);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(-5)).toEqual(-5);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\"-5\")).toEqual(-5);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\"-7.3\")).toEqual(-7.3);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\"-2,4\")).toEqual(-2.4);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\"a2\")).toEqual(2);\n        expect((0, $28124995b582090f$export$3bfd68ece41435eb)(\"2a\")).toEqual(2);\n    });\n    test(`bool`, ()=>{\n        expect((0, $28124995b582090f$export$87b259aa03e3d267)(0)).toEqual(false);\n        expect((0, $28124995b582090f$export$87b259aa03e3d267)(1)).toEqual(true);\n        expect((0, $28124995b582090f$export$87b259aa03e3d267)(\"true\")).toEqual(true);\n        expect((0, $28124995b582090f$export$87b259aa03e3d267)(\"false\")).toEqual(false);\n        expect((0, $28124995b582090f$export$87b259aa03e3d267)(undefined, \"b\")).toEqual(\"b\");\n    });\n    test(`err`, ()=>{\n        expect((0, $28124995b582090f$export$8048b892d651b310)(new Error(\"test\")).message).toEqual(\"test\");\n        expect((0, $28124995b582090f$export$8048b892d651b310)(\"test\").message).toEqual(\"test\");\n    });\n    test(`date`, ()=>{\n        const d0 = new Date(0);\n        const now = new Date();\n        const nowTime = now.getTime();\n        expect((0, $28124995b582090f$export$324d90190a8b822a)(now, d0).getTime()).toEqual(nowTime);\n        expect((0, $28124995b582090f$export$324d90190a8b822a)(nowTime, d0).getTime()).toEqual(nowTime);\n    });\n});\n\n\n//# sourceMappingURL=cast.spec.js.map\n","import { str, arr, obj, nbr, bool, err, date } from './cast';\n\ndescribe('cast', () => {\n  test(`str`, () => {\n    expect(str(0)).toEqual('0');\n    expect(str(5)).toEqual('5');\n    expect(str(undefined, 'a')).toBe('a');\n  });\n\n  test(`arr`, () => {\n    expect(arr(0)).toEqual([0]);\n    expect(arr([5])).toEqual([5]);\n    expect(arr({ a: 1 })).toEqual([{ a: 1 }]);\n  });\n\n  test(`obj`, () => {\n    expect(obj(0)).toEqual({});\n    expect(obj([5], 'b')).toEqual('b');\n    expect(obj({ a: 1 })).toEqual({ a: 1 });\n  });\n\n  test(`nbr`, () => {\n    expect(nbr(0, 'a')).toEqual(0);\n    expect(nbr('', 'b')).toEqual('b');\n    expect(nbr(undefined, 'c')).toEqual('c');\n    expect(nbr('')).toEqual(undefined);\n    expect(nbr(' ')).toEqual(undefined);\n    expect(nbr(-5)).toEqual(-5);\n    expect(nbr('-5')).toEqual(-5);\n    expect(nbr('-7.3')).toEqual(-7.3);\n    expect(nbr('-2,4')).toEqual(-2.4);\n    expect(nbr('a2')).toEqual(2);\n    expect(nbr('2a')).toEqual(2);\n  });\n\n  test(`bool`, () => {\n    expect(bool(0)).toEqual(false);\n    expect(bool(1)).toEqual(true);\n    expect(bool('true')).toEqual(true);\n    expect(bool('false')).toEqual(false);\n    expect(bool(undefined, 'b')).toEqual('b');\n  });\n\n  test(`err`, () => {\n    expect(err(new Error(\"test\")).message).toEqual(\"test\");\n    expect(err(\"test\").message).toEqual(\"test\");\n  });\n\n  test(`date`, () => {\n    const d0 = new Date(0);\n    const now = new Date();\n    const nowTime = now.getTime();\n    expect(date(now, d0).getTime()).toEqual(nowTime);\n    expect(date(nowTime, d0).getTime()).toEqual(nowTime);\n  });\n});\n\n\n","export function str(v: any, def: string = ''): string {\n    return v === null || v === undefined ? def : String(v);\n}\n\nexport function arr<T = any>(v: T): T[];\nexport function arr<T = any>(v: T[]): T[];\nexport function arr<T = any>(v: any, def: T[] = []): T[] {\n    return v === null || v === undefined ? def : Array.isArray(v) ? v : [v];\n}\n\nexport function obj<T = any>(v: T | null | undefined): T | Partial<T>;\nexport function obj<T = any, U = any>(v: T | null | undefined, def: U): T | U;\nexport function obj<T = any>(v: any, def: T = {} as any): T {\n    return v === null || typeof v !== 'object' || Array.isArray(v) ? def : v;\n}\n\nexport function nbr(v: any): number | undefined;\nexport function nbr<D>(v: any, nanVal: D): number | D;\nexport function nbr<D>(v: any, nanVal?: D): number | D | undefined {\n    const clean = typeof v === 'string' ? v.replace(/,/g, '.').replace(/[^0-9\\-\\.]/g, '') : String(v);\n    const nbr = clean !== '' ? Number(clean) : Number.NaN;\n    return Number.isNaN(nbr) ? nanVal : nbr;\n}\n\nexport function bool(v: any): boolean | undefined;\nexport function bool<T>(v: any, defVal: T): boolean | T;\nexport function bool<T = boolean>(v: any, defVal?: T | boolean): boolean | T | undefined {\n    if (typeof v === 'string') return v === 'true' || v === 'ok' || v === 'on';\n    return v === undefined || v === null ? defVal : !!v;\n}\n\nexport function err(error: any): Error {\n    return error instanceof Error ? error : new Error(String(error));\n}\n\nexport function date(v: any): Date;\nexport function date<TDef>(v: any, defVal: TDef): Date | TDef;\nexport function date<TDef>(v: any, defVal?: TDef): Date | TDef | undefined {\n    return (v instanceof Date) ? v :\n        (typeof v === 'string') ? new Date(v) :\n            (typeof v === 'number') ? new Date(v) :\n                defVal === undefined ? new Date() : defVal;\n}\n\nexport const toString = str;\nexport const toArray = arr;\nexport const toObject = obj;\nexport const toNumber = nbr;\nexport const toBoolean = bool;\nexport const toError = err;\nexport const toDate = date;"],"names":["$28124995b582090f$export$42d51816ce590c93","v","def","String","$28124995b582090f$export$29d5d0b2414dfc5c","Array","isArray","$28124995b582090f$export$d29f2533ab4f8bcf","$28124995b582090f$export$3bfd68ece41435eb","nanVal","clean","replace","nbr","Number","NaN","isNaN","$28124995b582090f$export$87b259aa03e3d267","defVal","$28124995b582090f$export$8048b892d651b310","error","Error","$28124995b582090f$export$324d90190a8b822a","Date","undefined","describe","test","expect","toEqual","toBe","a","message","d0","now","nowTime","getTime"],"version":3,"file":"cast.spec.js.map","sourceRoot":"../"}